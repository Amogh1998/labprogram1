//matrix multiplication-
#include<stdio.h>
#include<process.h>
void multiply(int a[][10],int b[][10],int c[][10],int m,int n,int p,int q);
int main()
{
	int n,i,j,m,p,q,k,a[10][10],b[10][10],c[10][10],sum;
	printf("Enter the order of the 1st matrix(mXn) : ");
	scanf("%d%d",&m,&n);
	for(i=0;i<m;i++)                                            //loop for entering the elements of 1st element
	{
		for(j=0;j<n;j++)
		{
			printf("\nEnter the element for %dth row and %dth column : ",i+1,j+1);
			scanf("%d",&a[i][j]);
		}
	}
	printf("\nEnter the order of the 2nd matrix(mXn) : ");       
	scanf("%d%d",&p,&q);
	if(n!=p)                                           //condition for matrix multiplication
	{
		printf("\nMultiplication is not possible ");
		exit(0);
	}
	for(i=0;i<p;i++)                                           //loop for entering the elements of 2nd element
	{
		for(j=0;j<q;j++)
		{
			printf("\nEnter the element for %dth row and %dth column : ",i+1,j+1);
			scanf("%d",&b[i][j]);
		}
	}
	multiply(a[][10],b[][10],c[][10],m,n,p,q);	
	printf("\nThe 1st input matrix is : \n");
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)                          //loop for printing the 1st input array
		{
			printf("%d\t",a[i][j]);
		}
		printf("\n");
	}
	printf("\nThe 2nd input matrix is :\n");       //loop for printing the 2nd input array
	for(i=0;i<p;i++)
	{
		for(j=0;j<q;j++)
		{
			printf("%d\t",b[i][j]);
		}
		printf("\n");
	}
	printf("\nThe resultant matrix is :\n");
	for(i=0;i<m;i++)                                 //loop for displaying the resultant multiplied array
	{
		for(j=0;j<q;j++)
		{	
			printf("%d\t",c[i][j]);
		}
		printf("\n");
	}
	return 0;
}
void multiply(int a[][10],int b[][10],int c[][10],int m,int n,int p,int q)
{
	int i,j,k,sum;
	for(i=0;i<m;i++)                       //loop for multipying the given matrices
	{
		for(j=0;j<q;j++)
		{
			sum=0;
			for(k=0;k<n;k++)
			{
				sum=sum+(a[i][k]*b[k][j]);            
			}
			c[i][j]=sum;                        //storing the new multiplied values in a new array
		}
	}
	return;
}
